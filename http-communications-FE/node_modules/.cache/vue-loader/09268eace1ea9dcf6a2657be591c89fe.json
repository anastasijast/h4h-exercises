{"remainingRequest":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/user/Downloads/zadaca/EDU/http-communication/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/user/Downloads/zadaca/EDU/http-communication/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Downloads/zadaca/EDU/http-communication/src/components/HttpCommunication.vue?vue&type=template&id=b91b45a4&scoped=true&class=poz&","dependencies":[{"path":"/home/user/Downloads/zadaca/EDU/http-communication/src/components/HttpCommunication.vue","mtime":1640282186595},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640083876907},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640083882001},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640083876907},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/vue-loader/lib/index.js","mtime":1640083882001},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640083876907},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640083882001},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640083876907},{"path":"/home/user/Downloads/zadaca/EDU/http-communication/node_modules/vue-loader/lib/index.js","mtime":1640083882001}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}